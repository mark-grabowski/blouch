---
title: "Blouch Package Setup 2023"
output: html_notebook
editor_options: 
  chunk_output_type: console
---
Following https://r-pkgs.org/whole-game.html
First install all used packages
```{r}
install.packages("devtools")
install.packages("roxygen2")
remotes::install_github("stan-dev/rstantools")

```
Load pakages
```{r}
#library("rstantools")

#if (!require("remotes")) {
#install.packages("remotes")
#}

library(devtools)
library(roxygen2)
library(rstantools)

setwd('/Users/markgrabowski/Documents/Academic/Research/R Packages/blouch')
```

Create package that relies on rstan
https://mc-stan.org/rstantools/articles/minimal-rstan-package.html
```{r}
rstan_create_package(path = '/Users/markgrabowski/Documents/Academic/Research/R Packages/blouch')
use_git() #To monitor changes
#use_mit_license() 
use_gpl3_license() #Because package depends on things that have this licence
```

Now manually add Stan and R files to folders

Next, update documentation
```{r}
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
roxygen2::roxygenize() #Setup R and Stan functions to run in package
devtools::document() #Description and Namespace files - trigger the conversion of  roxygen comments
```

Check if functions work
```{r}
load_all()

```

Set up readme file
```{r}
use_readme_rmd() 
devtools::build_readme() #Rebuild readme
```

Compile package and stan models
```{r}
install.packages("../blouch", repos = NULL, type = "source")
library(blouch)
```


Rebuild whole package
```{r}
#devtools::install('blouch', local=FALSE)
#install.packages("../blouch", repos = NULL, type = "source")
library(blouch) #Attach package
```


Check package
```{r}
check()
```

Test drive functions in package
```{r}
load_all()
```

Now run simulation example code

Here is a typical sequence of calls when using devtools for package development:

Edit one or more files below R/.
document() (if youâ€™ve made any changes that impact help files or NAMESPACE)
load_all()
Run some examples interactively.
test() (or test_active_file())
check()

```{r}
devtools::document() #Update all documentation
devtools::load_all() #Load package into memory
#Run some examples interactively.
devtools::test() 
devtools::check() #R CMD Check
```

```{r}
usethis::use_tidy_description()
```

testthat package: https://r-pkgs.org/testing-basics.html
Run once per package
```{r}
usethis::use_testthat(3)
```


Add data to package
```{r}
tree.10K<-read.tree("/Users/markgrabowski/Documents/Academic/Research/Current Projects/Blouch project/Original Submission/Blouch Testing/Phylogeny/10KPrimateTree.tre")
usethis::use_data(tree.10K)

```

Create vignette
```{r}
usethis::use_vignette("Simulation_Example") #Setup vignette

devtools::build_vignettes() #Build all vignettes
```


Edit Renviron file - to change load_all() to not run debug build - speed up Stan?
```{r}
usethis::edit_r_environ()
#Add line
#PKG_BUILD_EXTRA_FLAGS="false"

```

```{r}
rstan_config() #for updating an existing package when its Stan files are changed.
```


Package situation report - for development
```{r}
devtools::dev_sitrep()
```

```{r}
library(testthat)
library(blouch)

test_check("blouch")

```

Used Rstudio Clean and Install to build Blouch package - runs stan a lot faster
However, an alternate way of building package
```{r}
devtools::install()
library("blouch")

devtools::install(quick=FALSE,build=TRUE,build_vignettes = TRUE) #Installation of whole package, including building vignettes


```


Prep to Build Website
```{r}
#setwd("~/Documents/Academic/Research/R Packages/blouch")
try(roxygen2::roxygenize(load_code = sourceDir), silent = TRUE)
pkgbuild::compile_dll()


#setwd("~/Documents/Academic/Research/R Packages/blouch")
usethis::use_pkgdown()

```

Build website
```{r}
#setwd("~/Documents/Academic/Research/R Packages/blouch")
devtools::document() #Update all documentation

pkgdown::build_site()

```



Install Package from Github: Private Repo
```{r}
devtools::install_github("mark-grabowski/blouch"
                         ,ref="master"
                         ,auth_token = "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"
                         )
```



